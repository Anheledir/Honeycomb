// <auto-generated />
using System;
using BaseBotService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BaseBotService.Migrations
{
    [DbContext(typeof(HoneycombDbContext))]
    [Migration("20240823215635_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("BaseBotService.Core.Base.AchievementBase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AchievementType")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Emoji")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<ulong?>("GuildId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<ulong>("MemberId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Points")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("SourceIdentifier")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GuildId");

                    b.HasIndex("MemberId");

                    b.HasIndex("SourceIdentifier");

                    b.HasIndex("GuildId", "MemberId");

                    b.ToTable("Achievements");

                    b.HasDiscriminator<string>("AchievementType").HasValue("AchievementBase");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("BaseBotService.Data.Models.GuildHC", b =>
                {
                    b.Property<ulong>("GuildId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("ActivityPointsAverageActiveHours")
                        .HasColumnType("REAL");

                    b.Property<string>("ActivityPointsName")
                        .HasColumnType("TEXT");

                    b.Property<string>("ActivityPointsSymbol")
                        .HasColumnType("TEXT");

                    b.Property<string>("ArtistRoles")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<ulong>("InternalNotificationChannel")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ModeratorRoles")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Settings")
                        .HasColumnType("INTEGER");

                    b.HasKey("GuildId");

                    b.HasIndex("GuildId")
                        .IsUnique();

                    b.ToTable("Guilds");
                });

            modelBuilder.Entity("BaseBotService.Data.Models.GuildMemberHC", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<uint>("ActivityPoints")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("GuildId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastActive")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastActivityPoint")
                        .HasColumnType("TEXT");

                    b.Property<ulong>("MemberId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GuildId");

                    b.HasIndex("MemberId");

                    b.HasIndex("GuildId", "MemberId")
                        .IsUnique();

                    b.ToTable("GuildMembers");
                });

            modelBuilder.Entity("BaseBotService.Data.Models.MemberHC", b =>
                {
                    b.Property<ulong>("MemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("TEXT");

                    b.Property<int>("Country")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GenderIdentity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Languages")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Timezone")
                        .HasColumnType("INTEGER");

                    b.HasKey("MemberId");

                    b.HasIndex("MemberId")
                        .IsUnique();

                    b.ToTable("Members");
                });

            modelBuilder.Entity("BaseBotService.Infrastructure.Achievements.EasterEventAchievement", b =>
                {
                    b.HasBaseType("BaseBotService.Core.Base.AchievementBase");

                    b.HasDiscriminator().HasValue("EasterEvent");
                });

            modelBuilder.Entity("BaseBotService.Core.Base.AchievementBase", b =>
                {
                    b.HasOne("BaseBotService.Data.Models.GuildHC", "Guild")
                        .WithMany("Achievements")
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BaseBotService.Data.Models.MemberHC", "Member")
                        .WithMany("Achievements")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guild");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("BaseBotService.Data.Models.GuildMemberHC", b =>
                {
                    b.HasOne("BaseBotService.Data.Models.GuildHC", "Guild")
                        .WithMany("Members")
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BaseBotService.Data.Models.MemberHC", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guild");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("BaseBotService.Data.Models.GuildHC", b =>
                {
                    b.Navigation("Achievements");

                    b.Navigation("Members");
                });

            modelBuilder.Entity("BaseBotService.Data.Models.MemberHC", b =>
                {
                    b.Navigation("Achievements");
                });
#pragma warning restore 612, 618
        }
    }
}
